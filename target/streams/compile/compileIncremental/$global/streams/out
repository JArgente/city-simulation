[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/jorge/Projects/city-simulation/src/main/scala/com/example/City.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/ActorInfo.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/AkkaLaunch.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Guard.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Blacksmith.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Citizen.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Action.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Tavern.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/CitySim.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Action.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/ActorInfo.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Guard.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Tavern.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/City.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Blacksmith.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Citizen.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/AkkaLaunch.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/City$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Citizen.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$GuardAction$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$GuardAction.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/City$CityInfo.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Guard$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Tavern$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$TavernAction.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$ActorAction.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$BlacksmithAction$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$CreatePopulation$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$TavernAction$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/City$CityInfo$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Tavern.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action$BlacksmithAction.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/AkkaLaunch$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo$Status$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/City.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/AkkaLaunch$delayedInit$body.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo$Skill$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Guard.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Blacksmith.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Blacksmith$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo$Skill.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo$Personality.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/Action.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo$Personality$.class, /home/jorge/Projects/city-simulation/target/scala-2.13/classes/com/example/ActorInfo$Status.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(com.example.Action.GuardAction, com.example.Tavern, com.example.ActorInfo.Skill, com.example.ActorInfo.Status, com.example.ActorInfo.Personality, com.example.Action.CreatePopulation, com.example.Blacksmith, com.example.ActorInfo, com.example.Action.BlacksmithAction, com.example.Citizen, com.example.Action, com.example.Action.TavernAction, com.example.AkkaLaunch, com.example.City.CityInfo, com.example.Guard, com.example.Action.ActorAction, com.example.City)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/jorge/Projects/city-simulation/src/main/scala/com/example/City.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/ActorInfo.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/AkkaLaunch.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Guard.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Blacksmith.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Citizen.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Action.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Tavern.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(com.example.Action.GuardAction, com.example.Tavern, com.example.ActorInfo.Skill, com.example.ActorInfo.Status, com.example.ActorInfo.Personality, com.example.Action.CreatePopulation, com.example.Blacksmith, com.example.ActorInfo, com.example.Action.BlacksmithAction, com.example.Citizen, com.example.Action, com.example.Action.TavernAction, com.example.AkkaLaunch, com.example.City.CityInfo, com.example.Guard, com.example.Action.ActorAction, com.example.City)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/jorge/Projects/city-simulation/src/main/scala/com/example/City.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/CitySim.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Action.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/ActorInfo.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/ActorInfo.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Guard.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/AkkaLaunch.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Guard.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Tavern.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Blacksmith.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/City.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Citizen.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Blacksmith.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/quantictime/citysim/Citizen.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Action.scala, /home/jorge/Projects/city-simulation/src/main/scala/com/example/Tavern.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 8 sources: invalidated sources (16) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 8 Scala sources to /home/jorge/Projects/city-simulation/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.1.7:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.1.7:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 318dc897 for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/lib/resources.jar:/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/lib/rt.jar:/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/lib/sunrsasign.jar:/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/lib/jsse.jar:/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/lib/jce.jar:/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/lib/charsets.jar:/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/lib/jfr.jar:/home/jorge/.sdkman/candidates/java/8.0.232-zulu/jre/classes:/home/jorge/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/jorge/Projects/city-simulation/target/scala-2.13/classes:/home/jorge/.ivy2/cache/com.typesafe.akka/akka-actor-typed_2.13/jars/akka-actor-typed_2.13-2.6.1.jar:/home/jorge/.ivy2/cache/com.typesafe.akka/akka-actor_2.13/jars/akka-actor_2.13-2.6.1.jar:/home/jorge/.ivy2/cache/com.typesafe/config/bundles/config-1.4.0.jar:/home/jorge/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.13/jars/scala-java8-compat_2.13-0.9.0.jar:/home/jorge/.ivy2/cache/com.typesafe.akka/akka-slf4j_2.13/jars/akka-slf4j_2.13-2.6.1.jar:/home/jorge/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.29.jar:/home/jorge/.ivy2/cache/ch.qos.logback/logback-classic/jars/logback-classic-1.2.3.jar:/home/jorge/.ivy2/cache/ch.qos.logback/logback-core/jars/logback-core-1.2.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 6.771714268 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Citizen...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Citizen)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Citizen)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Citizen,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(Citizen,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(com;example;Citizen;init;,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.Citizen has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(Citizen,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(com;example;Citizen;init;,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Citizen)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.ActorInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.ActorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.ActorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(status,[Default]), UsedName(Skill,[Default]), UsedName(apply,[Default]), UsedName(ActorInfo,[Default]), UsedName(personality,[Default]), UsedName(skills,[Default]), UsedName(Status,[Default]), UsedName(Personality,[Default]), UsedName(money,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(status,[Default]), UsedName(Skill,[Default]), UsedName(apply,[Default]), UsedName(ActorInfo,[Default]), UsedName(personality,[Default]), UsedName(skills,[Default]), UsedName(Status,[Default]), UsedName(Personality,[Default]), UsedName(money,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(status,[Default]), UsedName(Skill,[Default]), UsedName(apply,[Default]), UsedName(ActorInfo,[Default]), UsedName(personality,[Default]), UsedName(skills,[Default]), UsedName(Status,[Default]), UsedName(Personality,[Default]), UsedName(money,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.ActorInfo,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(status,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(ActorInfo,[Default]), UsedName(personality,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(skills,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(com;quantictime;citysim;ActorInfo;init;,[Default]), UsedName(money,[Default]))) invalidates 4 classes due to The com.quantictime.citysim.ActorInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(status,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(ActorInfo,[Default]), UsedName(personality,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(skills,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(com;quantictime;citysim;ActorInfo;init;,[Default]), UsedName(money,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.ActorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.Guard, com.quantictime.citysim.Tavern, com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.ActorInfo.Status...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.ActorInfo.Status)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.ActorInfo.Status)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.ActorInfo.Status,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(fame,[Default]), UsedName(apply,[Default]), UsedName(com;example;ActorInfo;Status;init;,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(tedious,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(wealth,[Default]), UsedName(wellness,[Default]))) invalidates 1 classes due to The com.example.ActorInfo.Status has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(fame,[Default]), UsedName(apply,[Default]), UsedName(com;example;ActorInfo;Status;init;,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(tedious,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(wealth,[Default]), UsedName(wellness,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.ActorInfo.Status)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Action...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Action)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Action)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Action,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Action,[Default]), UsedName(GuardAction,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(TavernAction,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]))) invalidates 1 classes due to The com.example.Action has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Action,[Default]), UsedName(GuardAction,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(TavernAction,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Action)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Action.GuardAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Action.GuardAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Action.GuardAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Action.GuardAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(com;example;Action;GuardAction;init;,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(GuardAction,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.Action.GuardAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(com;example;Action;GuardAction;init;,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(GuardAction,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Action.GuardAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Blacksmith...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(context,[Default]), UsedName(Blacksmith,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Blacksmith,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(com;quantictime;citysim;Blacksmith;init;,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(Blacksmith,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]), UsedName(who,[Default]))) invalidates 2 classes due to The com.quantictime.citysim.Blacksmith has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(com;quantictime;citysim;Blacksmith;init;,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(Blacksmith,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]), UsedName(who,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Action.ActorAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Action.ActorAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Action.ActorAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Action.ActorAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]))) invalidates 1 classes due to The com.example.Action.ActorAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Action.ActorAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Blacksmith...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Blacksmith,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(Blacksmith,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(com;example;Blacksmith;init;,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.Blacksmith has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(Blacksmith,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(com;example;Blacksmith;init;,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.ActorInfo.Personality...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.ActorInfo.Personality)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.ActorInfo.Personality)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.ActorInfo.Personality,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(com;example;ActorInfo;Personality;init;,[Default]), UsedName(fear,[Default]), UsedName(apply,[Default]), UsedName(copy$default$5,[Default]), UsedName(selfish,[Default]), UsedName(greed,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(lovee,[Default]), UsedName(copy$default$4,[Default]), UsedName(entrepeneur,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.ActorInfo.Personality has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(com;example;ActorInfo;Personality;init;,[Default]), UsedName(fear,[Default]), UsedName(apply,[Default]), UsedName(copy$default$5,[Default]), UsedName(selfish,[Default]), UsedName(greed,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(lovee,[Default]), UsedName(copy$default$4,[Default]), UsedName(entrepeneur,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.ActorInfo.Personality)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Guard...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Guard)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Guard)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Guard,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(Guard,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(com;example;Guard;init;,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.Guard has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(Guard,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(com;example;Guard;init;,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Guard)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.ActorInfo.Status...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.ActorInfo.Status)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.ActorInfo.Status)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(fame,[Default]), UsedName(apply,[Default]), UsedName(Status,[Default]), UsedName(tedious,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(fame,[Default]), UsedName(apply,[Default]), UsedName(Status,[Default]), UsedName(tedious,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(fame,[Default]), UsedName(apply,[Default]), UsedName(Status,[Default]), UsedName(tedious,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.ActorInfo.Status,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(fame,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(tedious,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(com;quantictime;citysim;ActorInfo;Status;init;,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 4 classes due to The com.quantictime.citysim.ActorInfo.Status has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(fame,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(tedious,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(com;quantictime;citysim;ActorInfo;Status;init;,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.ActorInfo.Status)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.Guard, com.quantictime.citysim.Tavern, com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.City...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.City)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.City)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action.BlacksmithAction: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(City,[Default]), UsedName($isInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(context,[Default]), UsedName(City,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.CitySim: Set(UsedName(apply,[Default]), UsedName(City,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action.TavernAction: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(City,[Default]), UsedName($isInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(context,[Default]), UsedName(City,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action.GuardAction: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(City,[Default]), UsedName($isInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(context,[Default]), UsedName(City,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action: Set(UsedName(CityInfo,[Default]), UsedName(City,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Citizen: Set(UsedName(CityInfo,[Default]), UsedName(context,[Default]), UsedName(City,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.City,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(City,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(com;quantictime;citysim;City;init;,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]))) invalidates 10 classes due to The com.quantictime.citysim.City has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(City,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(com;quantictime;citysim;City;init;,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.City)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.Action.BlacksmithAction, com.quantictime.citysim.Guard, com.quantictime.citysim.CitySim, com.quantictime.citysim.Action.TavernAction, com.quantictime.citysim.Tavern, com.quantictime.citysim.Action.GuardAction, com.quantictime.citysim.Blacksmith, com.quantictime.citysim.Action, com.quantictime.citysim.Citizen)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.ActorInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.ActorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.ActorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.ActorInfo,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(status,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(com;example;ActorInfo;init;,[Default]), UsedName(ActorInfo,[Default]), UsedName(personality,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(skills,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(money,[Default]))) invalidates 1 classes due to The com.example.ActorInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(status,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(com;example;ActorInfo;init;,[Default]), UsedName(ActorInfo,[Default]), UsedName(personality,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(skills,[Default]), UsedName(Status,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(money,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.ActorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Tavern...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Tavern,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(Tavern,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(com;example;Tavern;init;,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.Tavern has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(Tavern,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(com;example;Tavern;init;,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.City.CityInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.City.CityInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.City.CityInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.City.CityInfo,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(lifeQuality,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(merchantActivity,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(copy$default$5,[Default]), UsedName(CityInfo,[Default]), UsedName(tavernOpen,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(com;example;City;CityInfo;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(copy$default$6,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(population,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(richness,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.City.CityInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(lifeQuality,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(merchantActivity,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(copy$default$5,[Default]), UsedName(CityInfo,[Default]), UsedName(tavernOpen,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(com;example;City;CityInfo;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(copy$default$6,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(population,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(richness,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.City.CityInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.ActorInfo.Skill...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.ActorInfo.Skill)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.ActorInfo.Skill)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(Skill,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(Skill,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(Skill,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.ActorInfo.Skill,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(name,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(com;quantictime;citysim;ActorInfo;Skill;init;,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(expertise,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 4 classes due to The com.quantictime.citysim.ActorInfo.Skill has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(name,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(com;quantictime;citysim;ActorInfo;Skill;init;,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(expertise,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.ActorInfo.Skill)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.Guard, com.quantictime.citysim.Tavern, com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Action.TavernAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Action.TavernAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Action.TavernAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(closed,[Default]), UsedName(replyTo,[Default]), UsedName(TavernAction,[Default]), UsedName(quality,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(replyTo,[Default]), UsedName(TavernAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Action.TavernAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(com;quantictime;citysim;Action;TavernAction;init;,[Default]), UsedName(TavernAction,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The com.quantictime.citysim.Action.TavernAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(com;quantictime;citysim;Action;TavernAction;init;,[Default]), UsedName(TavernAction,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Action.TavernAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City, com.quantictime.citysim.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Action.TavernAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Action.TavernAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Action.TavernAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Action.TavernAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(TavernAction,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(com;example;Action;TavernAction;init;,[Default]))) invalidates 1 classes due to The com.example.Action.TavernAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(TavernAction,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(com;example;Action;TavernAction;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Action.TavernAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Action...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Action)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Action)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(CreatePopulation,[Default]), UsedName(Action,[Default]), UsedName(GuardAction,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(TavernAction,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(Action,[Default]), UsedName(GuardAction,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.CitySim: Set(UsedName(CreatePopulation,[Default]), UsedName(Action,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(Action,[Default]), UsedName(TavernAction,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City.CityInfo: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Action,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(Action,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Action,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Action,[Default]), UsedName(GuardAction,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(TavernAction,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]))) invalidates 7 classes due to The com.quantictime.citysim.Action has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Action,[Default]), UsedName(GuardAction,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(TavernAction,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Action)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City, com.quantictime.citysim.Guard, com.quantictime.citysim.CitySim, com.quantictime.citysim.Tavern, com.quantictime.citysim.City.CityInfo, com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Action.ActorAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Action.ActorAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.quantictime.citysim.Action.TavernAction by com.quantictime.citysim.Action.ActorAction[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.quantictime.citysim.Action.CreatePopulation by com.quantictime.citysim.Action.ActorAction[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.quantictime.citysim.Action.GuardAction by com.quantictime.citysim.Action.ActorAction[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.quantictime.citysim.Action.BlacksmithAction by com.quantictime.citysim.Action.ActorAction[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Action.BlacksmithAction, com.quantictime.citysim.Action.ActorAction, com.quantictime.citysim.Action.TavernAction, com.quantictime.citysim.Action.GuardAction, com.quantictime.citysim.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.CitySim: Set(UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City.CityInfo: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.CitySim: Set(UsedName(ActorAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Action.ActorAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]))) invalidates 11 classes due to The com.quantictime.citysim.Action.ActorAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(ActorAction,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Action.BlacksmithAction, com.quantictime.citysim.Action.ActorAction, com.quantictime.citysim.Action.TavernAction, com.quantictime.citysim.Action.GuardAction, com.quantictime.citysim.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City, com.quantictime.citysim.Guard, com.quantictime.citysim.CitySim, com.quantictime.citysim.Tavern, com.quantictime.citysim.City.CityInfo, com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.City.CityInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.City.CityInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.City.CityInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action.BlacksmithAction: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(tavernOpen,[Default]), UsedName(population,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action.TavernAction: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(population,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action.GuardAction: Set(UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(tavernOpen,[Default]), UsedName(population,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Action: Set(UsedName(CityInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Citizen: Set(UsedName(CityInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.City.CityInfo,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(lifeQuality,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(merchantActivity,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(copy$default$5,[Default]), UsedName(CityInfo,[Default]), UsedName(tavernOpen,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(copy$default$6,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(com;quantictime;citysim;City;CityInfo;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(population,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(richness,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 9 classes due to The com.quantictime.citysim.City.CityInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(lifeQuality,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(merchantActivity,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(copy$default$5,[Default]), UsedName(CityInfo,[Default]), UsedName(tavernOpen,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(copy$default$6,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(com;quantictime;citysim;City;CityInfo;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(population,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(richness,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.City.CityInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.Action.BlacksmithAction, com.quantictime.citysim.Guard, com.quantictime.citysim.Action.TavernAction, com.quantictime.citysim.Tavern, com.quantictime.citysim.Action.GuardAction, com.quantictime.citysim.Blacksmith, com.quantictime.citysim.Action, com.quantictime.citysim.Citizen)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.ActorInfo.Personality...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.ActorInfo.Personality)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.ActorInfo.Personality)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(fear,[Default]), UsedName(apply,[Default]), UsedName(greed,[Default]), UsedName(Personality,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(fear,[Default]), UsedName(apply,[Default]), UsedName(greed,[Default]), UsedName(Personality,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(fear,[Default]), UsedName(apply,[Default]), UsedName(greed,[Default]), UsedName(Personality,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.ActorInfo.Personality,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(fear,[Default]), UsedName(apply,[Default]), UsedName(greed,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(com;quantictime;citysim;ActorInfo;Personality;init;,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 4 classes due to The com.quantictime.citysim.ActorInfo.Personality has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(fear,[Default]), UsedName(apply,[Default]), UsedName(greed,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(Personality,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(com;quantictime;citysim;ActorInfo;Personality;init;,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.ActorInfo.Personality)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.Guard, com.quantictime.citysim.Tavern, com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Action.GuardAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Action.GuardAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Action.GuardAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(closed,[Default]), UsedName(GuardAction,[Default]), UsedName(replyTo,[Default]), UsedName(quality,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(GuardAction,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Action.GuardAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(GuardAction,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(com;quantictime;citysim;Action;GuardAction;init;,[Default]))) invalidates 3 classes due to The com.quantictime.citysim.Action.GuardAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(GuardAction,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]), UsedName(com;quantictime;citysim;Action;GuardAction;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Action.GuardAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City, com.quantictime.citysim.Guard)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Action.CreatePopulation...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Action.CreatePopulation,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.Action.CreatePopulation has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Action.CreatePopulation...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(CreatePopulation,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.CitySim: Set(UsedName(CreatePopulation,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Action.CreatePopulation,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The com.quantictime.citysim.Action.CreatePopulation has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(CreatePopulation,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Action.CreatePopulation)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City, com.quantictime.citysim.CitySim)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Action.BlacksmithAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Action.BlacksmithAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Action.BlacksmithAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(closed,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(replyTo,[Default]), UsedName(quality,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(replyTo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Action.BlacksmithAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(com;quantictime;citysim;Action;BlacksmithAction;init;,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The com.quantictime.citysim.Action.BlacksmithAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(com;quantictime;citysim;Action;BlacksmithAction;init;,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Action.BlacksmithAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City, com.quantictime.citysim.Blacksmith)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.CitySim...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.CitySim)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.CitySim)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.CitySim,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(executionStart,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(main,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(city,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(CitySim,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.quantictime.citysim.CitySim has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(executionStart,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(main,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(city,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(CitySim,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.CitySim)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.Action.BlacksmithAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.Action.BlacksmithAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.Action.BlacksmithAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.Action.BlacksmithAction,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName(com;example;Action;BlacksmithAction;init;,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.Action.BlacksmithAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(copy$default$3,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(price,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(closed,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$4,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(BlacksmithAction,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName(replyTo,[Default]), UsedName(com;example;Action;BlacksmithAction;init;,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(quality,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.Action.BlacksmithAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Guard...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Guard)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Guard)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(Guard,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(context,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Guard,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(Guard,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(com;quantictime;citysim;Guard;init;,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]), UsedName(who,[Default]))) invalidates 2 classes due to The com.quantictime.citysim.Guard has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(Guard,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(com;quantictime;citysim;Guard;init;,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]), UsedName(who,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Guard)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Tavern...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(context,[Default]), UsedName(Tavern,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Tavern,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(Tavern,[Default]), UsedName(getClass,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]), UsedName(who,[Default]), UsedName(com;quantictime;citysim;Tavern;init;,[Default]))) invalidates 2 classes due to The com.quantictime.citysim.Tavern has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(Tavern,[Default]), UsedName(getClass,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]), UsedName(who,[Default]), UsedName(com;quantictime;citysim;Tavern;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.City)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.quantictime.citysim.Citizen...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.quantictime.citysim.Citizen)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.quantictime.citysim.Guard by com.quantictime.citysim.Citizen[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.quantictime.citysim.Tavern by com.quantictime.citysim.Citizen[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.quantictime.citysim.Blacksmith by com.quantictime.citysim.Citizen[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.quantictime.citysim.Citizen, com.quantictime.citysim.Guard, com.quantictime.citysim.Blacksmith, com.quantictime.citysim.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Guard: Set(UsedName(asInstanceOf,[Default]), UsedName(Citizen,[Default]), UsedName(performAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Tavern: Set(UsedName(asInstanceOf,[Default]), UsedName(Citizen,[Default]), UsedName(performAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.Blacksmith: Set(UsedName(asInstanceOf,[Default]), UsedName(Citizen,[Default]), UsedName(performAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.quantictime.citysim.City: Set(UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.quantictime.citysim.Citizen,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(Citizen,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(who,[Default]))) invalidates 5 classes due to The com.quantictime.citysim.Citizen has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(Citizen,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(performAction,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(who,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.quantictime.citysim.Citizen, com.quantictime.citysim.Guard, com.quantictime.citysim.Blacksmith, com.quantictime.citysim.Tavern)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.quantictime.citysim.Guard, com.quantictime.citysim.Tavern, com.quantictime.citysim.Blacksmith, com.quantictime.citysim.City)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.City...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.City)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.City)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.City,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(com;example;City;init;,[Default]), UsedName(City,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.City has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(narrow,[Default]), UsedName(_tag,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(CityInfo,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(context,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(unsafeCast,[Default]), UsedName(synchronized,[Default]), UsedName(com;example;City;init;,[Default]), UsedName(City,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(receiveSignal,[Default]), UsedName(clone,[Default]), UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(onMessage,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.City)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.ActorInfo.Skill...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.ActorInfo.Skill)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.ActorInfo.Skill)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.ActorInfo.Skill,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(name,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(expertise,[Default]), UsedName(productElementName,[Default]), UsedName(com;example;ActorInfo;Skill;init;,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.ActorInfo.Skill has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(Skill,[Default]), UsedName(name,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(expertise,[Default]), UsedName(productElementName,[Default]), UsedName(com;example;ActorInfo;Skill;init;,[Default]), UsedName(productElement,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.ActorInfo.Skill)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.example.AkkaLaunch...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.example.AkkaLaunch)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.example.AkkaLaunch)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.example.AkkaLaunch,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(executionStart,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(main,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(city,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(AkkaLaunch,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The com.example.AkkaLaunch has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(executionStart,[Default]), UsedName(==,[Default]), UsedName(finalize,[Default]), UsedName(main,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(city,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(AkkaLaunch,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.example.AkkaLaunch)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
